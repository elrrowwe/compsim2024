import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as anim
Nx = 60
Ny = 80

# T = np.random.choice([0, 1], size = (Ny, Nx))

Tf = (np.random.rand(Nx,Ny)>0.6)*1

# Ti = np.random.randint(0, 2, size = (Nx, Ny))
# Ls = np.hstack((Tf[:,1:],np.transpose([Tf[:,0]])))

def step(Tf):
    Ls = np.roll(Tf, 1,axis=0) +\
         np.roll(Tf,-1,axis=0) +\
         np.roll(Tf, 1,axis=1) +\
         np.roll(Tf,-1,axis=1) +\
         np.roll(Tf,( 1, 1),axis=(0,1)) +\
         np.roll(Tf,( 1,-1),axis=(0,1)) +\
         np.roll(Tf,(-1, 1),axis=(0,1)) +\
         np.roll(Tf,(-1,-1),axis=(0,1))
    return Tf*(Ls == 2) + (Ls == 3)

# działa tak samo jak w step(Tf)

# nTf = np.zeros_like(Tf)
# nTf[(Ls != 2) & (Ls != 3)] = 0
# nTf[Ls == 3] = 1 

# z zajęć:
count = 0
def update(data):
    global Tf, count
    count += 1
    nt = step(Tf)
    mat.set_data(Tf)
    n = np.sum(nt)
    ax.title.set_text("step {}, numer of live cells {}".format(count, n))
    Tf = nt
    return [mat]

fig = plt.figure()
ax = fig.add_subplot()
mat = ax.matshow(Tf)
an = anim.FuncAnimation(fig,update,interval = 10)

# moje z 1 roku:
    
# fig, ax = plt.subplots(figsize=(10, 10))
# im = ax.imshow(Tf, cmap='magma')
# im.set_clim(vmin=0, vmax=1)

# def update(frame):
#     global Tf
#     Tf = step(Tf)
#     im.set_array(Tf)
#     return im,

# ani = anim.FuncAnimation(fig, update, frames=range(50), interval=50, blit=True)

# plt.axis('off')
# plt.show()
